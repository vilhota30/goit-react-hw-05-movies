{"version":3,"file":"static/js/736.ebba321f.chunk.js","mappings":"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","sources":["components/BackToTop/BackToTop.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/servicesApi/API.js"],"sourcesContent":["import {useEffect, useState} from 'react';\n\nconst BackToTop = () => {\n\n const [toTop, setToTop] = useState(false);\n\n useEffect(() => {\n    const handleScroll = () => {\n        setToTop(window.scrollY > 200);\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n     \n    window.removeEventListener('scroll', handleScroll);\n    };\n }, []);\n\n\n const scrollToTop = () => {\n    window.scrollTo({\n        top: 0,\n        behavior: 'smooth',\n    });\n};\n\n\nreturn (\n    <>\n    {toTop && (\n        <button\n        style={{\n            position: 'fixed',\n            bottom: '50px',\n            right: '50px',\n            width: '50px',\n            height: '50px',\n            borderRadius: '50%',\n            background: 'blue',\n            cursor: 'pointer',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            color: 'white',\n            fontSize: '24px',\n            fontWeight: 'bold',\n            border: '3px solid darkblue'\n        }}\n        onClick={scrollToTop}\n        >\n         &#11014;\n        </button>\n    )}\n    </>\n);\n} \n\nexport default BackToTop;\n\n\n\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\npadding-bottom: 20px;\nmargin-top: 20px;\ndisplay: flex;\nflex-wrap: wrap;\nflex-direction: row;\nalign-items: center;\njustify-content: space-evenly;\ngap: 16px;\nborder-bottom: 2px solid black;\n`;\n\nexport const ActorItem = styled.li`\nbackground-color: cornflowerblue;\nborder: 3px solid darkblue;\nborder-radius: 8px;\n&&:hover,\n&&:focus{\n    cursor: pointer;\n    box-shadow: 0 2px 4px 2px grey;\n    transform: scale(1.07);\n}\n`;\n\nexport const Title = styled.p`\nmargin-top: 20px;\nfont-weight: bold;\nfont-size: 18px;\nborder: 2px solid darkblue;\nborder-radius: 10px;\ncolor: white;\nbackground-color: darkblue;\npadding: 10px;\ntext-decoration: wavy;\n\n&&:hover,\n&&:focus{\n    color: darkblue;\n    background-color:  white;\n}\n`; ","import React, {useEffect, useState} from 'react';\nimport { fetchMovieCast } from 'components/servicesApi/API';\nimport {useParams} from 'react-router-dom';\nimport {List, ActorItem, Title} from './Cast.styled';\nimport BackToTop from 'components/BackToTop/BackToTop';\n\nconst baseImgUrl = 'https://image.tmdb.org/t/p/w500';\nconst googleSearch = 'https://www.google.com/search?q=';\nconst defaultImgCast = 'https://www.tgv.com.my/assets/images/404/movie-poster.jpg';\n\n\nconst Cast = () => {\n    \n    const {movieId} = useParams();\n\n    const [cast, setCast] = useState([]);\n    const [, setIsLoading] =  useState(false);\n    const [, setError] = useState(null);\n\n    useEffect(() => {\n        if (!movieId) return;\n        \n        const fetchMovieCastData = async () => {\n            try {\n                setIsLoading(true);\n                const movieCast = await fetchMovieCast(movieId);\n                setCast(movieCast.cast);\n            } catch (error) {\n                setError(error.message);\n            } finally{\n                setIsLoading(false);\n            }\n        };\n\n        fetchMovieCastData();\n\n    },[cast, movieId]);\n\n    return (\n        <div>\n            {cast.length === 0 && (\n                <p>\n                    Sorry, but we don't have any cast for this movie\n                </p>\n            )}\n            <List>\n                {cast.map(cast => (\n                    <ActorItem key={cast.id}>\n                        <a\n                          href={googleSearch + cast.original_name}\n                          rel='noreferrer noopener'\n                          target='_blank'\n                        >\n                        <img\n                        width={250}\n                        src={\n                            cast.profile_path ? baseImgUrl + cast.profile_path : defaultImgCast\n                        }\n                        alt={cast.original_name}\n                        />\n                        <Title>{cast.original_name}</Title>\n                        </a>\n                    </ActorItem>\n                   ))}\n            </List>\n            <BackToTop/>\n        </div>\n    )\n}\n\nexport default Cast;","import axios from 'axios';\n\nconst API_KEY = 'c00883a4a0634ee096d1e1aebe08bf2c';\nconst baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchMovies = async (page = 1, pageSize = 12) => {\n    const {data} = await axios.get(`${baseURL}trending/movie/day?language=en-US&api_key=${API_KEY}&page=${page}`);\n    return data;\n};\n\n\nexport const fetchMovieDetails = async (id) => {\n    const {data} = await axios.get(`${baseURL}/movie/${id}?language=en-US&api_key=${API_KEY}`);\n    return data;\n};\n\n\nexport const fetchMoviesSearch = async query => {\n    const {data} = await axios.get(`${baseURL}/search/movie?query=${query}&include_adult=false&language=en-US&api_key=${API_KEY}&page=1`);\n    return data;\n};\n\n\nexport const fetchMovieCast = async id => {\n    const {data} = await axios.get(`${baseURL}/movie/${id}/credits?language=en-US&api_key=${API_KEY}`);\n    return data;\n};\n\nexport const fetchMovieReviews = async id => {\n    const {data} = await axios.get(`${baseURL}/movie/${id}/reviews?language=en-US&api_key=${API_KEY}`);\n    return data;\n};\n\n\n\n"],"names":["useState","toTop","setToTop","useEffect","handleScroll","window","scrollY","addEventListener","removeEventListener","style","position","bottom","right","width","height","borderRadius","background","cursor","display","alignItems","justifyContent","color","fontSize","fontWeight","border","onClick","scrollTo","top","behavior","List","styled","ActorItem","Title","movieId","useParams","cast","setCast","setIsLoading","setError","fetchMovieCastData","fetchMovieCast","movieCast","message","length","map","href","original_name","rel","target","src","profile_path","alt","id","BackToTop","API_KEY","baseURL","fetchMovies","page","axios","data","fetchMovieDetails","fetchMoviesSearch","query","fetchMovieReviews"],"sourceRoot":""}